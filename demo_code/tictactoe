
import "core.rowdy"

func main() {
	xBoard = 0
	oBoard = 0
	playBoard = 0
	
	print "For help, type 'help'", ln
	$showHelp()
	
  xPlays = $getFirstPlayer()
	$promptTurn()
	
	$initGame()
	$printBoard()
	loop game: {
		read input
		if $equals(input, "exit") {
			print "Goodbye", ln
			break
		} else if $equals(input, "help") {
			$showHelp()
		} else if $equals(input, "reset") {
			$initGame()
			$printBoard()
			$promptTurn()
		} else if $isNumber(input){
			$makeMove()
		} else if $isNotEmpty(input) {
			print "Invalid input", ln
		}
		
	}
	
}

func showHelp() {
	print "Type 'reset' to start a new game", ln
	print "To make a move, enter the index of the cell. To exit, type 'exit'", ln
}

dynamic func makeMove() {
	index = input as int
	if index >= 0 and index <= 8 {
		this.xPos = (index / 3) as int
		this.yPos = (index % 3) as int
		this.role = " "
		
		if xPlays {
			this.board = xBoard
			role = "X"
		} else {
			this.board = oBoard
			role = "O"
		}
		
		this.row = board[xPos]
		this.space = playBoard[index]
		if row[yPos] == 1 or $equals(space, "X") or $equals(space, "O") {
			print "Space is taken!", ln
		} else {
			row[yPos] = 1
			playBoard[index] = role
			
			// Place game logic here to check for a win or a tie
			
			$printBoard()
			xPlays = $not(xPlays)
			$promptTurn()
		}
	} else {
		print "Invalid index, try again", ln
	}
}

dynamic func printBoard() {
	print ln
	print " ", playBoard[0]," | ",playBoard[1], " | ",playBoard[2], "	", " 0 | 1 | 2 ", ln
	print " ----------	 ----------", ln
	print " ", playBoard[3]," | ",playBoard[4], " | ",playBoard[5], "	", " 3 | 4 | 5 ", ln
	print " ----------	 ----------", ln
	print " ", playBoard[6]," | ",playBoard[7], " | ",playBoard[8], "	", " 6 | 7 | 8 ", ln
}

dynamic func promptTurn() {
	if xPlays {
		print "X Goes", ln
	} else {
		print "O Goes", ln
	}
}
func getFirstPlayer() {
	return ($rand() * 2 as int) == 0
}

dynamic func initGame() {
	playBoard = [" ", " ", " ", " ", " ", " ", " ", " ", " "]
	xBoard = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
	oBoard = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
}